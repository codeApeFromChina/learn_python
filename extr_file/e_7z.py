#coding:utf-8import refrom os import walk, system, popen, removedirs, path, rmdir, remove, listdirimport shutilimport subprocesssuffixes = ["rar",'zip', '7z']pwds = ['fulieden.com','fuliydy.com','fuliydys.com','www.fulieden.com','flydy','www.fuliydys.com','www.fulixbl.com','www.meisixs.com','lwz1366@18p2p',]base_path = "h:/aaa/fff/"def list_files(base_path):    error_files = []    for root, dirs, files in walk(base_path) :        # print ("root: %s, dirs : %s, files: %s"%(root, dirs, files))        # print ("root: %s, dirs : %s"%(root, dirs, ))        for f in files:            if f.split(".")[-1] in suffixes:                # print (1111)                for pwd in pwds:                    cmd = "7z e -aos %s\"%s\" -p%s -o%s/*"%(base_path, f, pwd,base_path)                    print(cmd)                    out = ""                    status = popen(cmd)                    file_count = 0                    error_file_count = 0                    # print (status.readlines())                    extra_flag = True                    lines = status.readlines()                    print(lines)                    f_size = 0                    if  path.exists(base_path + f.replace(f.split(".")[-1], '')):                        p = (base_path + f.replace(f.split(".")[-1], ''))[0:-1]                        fs= listdir(p)                        f_size = len(fs)                    for rlt in lines:                        if rlt.find("Sub items Errors: ") > -1:                            error_file_count = int(re.sub(r'\D', "", rlt))                            if (error_file_count) and error_file_count >= f_size:                                rm_dirs(base_path + (f.replace(f.split(".")[-1],'')))                                extra_flag = False                        if rlt.find('Files: 0') > -1:                            rm_dirs(base_path + (f.replace(f.split(".")[-1], '')))                            extra_flag = False                    if extra_flag:                        break                    # if status > 0:                    #     print ("error , status code is : %s"%(status))                    #     pass                    # else:                    #     extra_flag = True                    #     break                # if not extra_flag :                #     error_files.append(f)    return error_filesdef rm_dirs (top):    for root, dirs, files in walk(top, topdown=False):        for name in files:            remove(path.join(root, name))        for name in dirs:            rmdir(path.join(root, name))if __name__ == '__main__':    # print (walk('h:/aaa/fff/aa/[WJSY] 12YUE NO.08'))    # base_dir = 'h:/aaa/fff/'    error_files = list_files(base_path)    # print(error_files)    # str = 'Files: 96\n'    # m = re.match(r'Files: (\d{2})', str)    # print (str.find("1"))    # print (m.groups())    # rm_dirs(base_dir)